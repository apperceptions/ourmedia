<?php


/**

 * Implementation of hook_help().

 */

function userplane_help($section) {

  switch ($section) {

    case 'admin/modules#description':

      return t('Enables integration with userplane');

  }

}

/**
 * Implementation of hook_perm().
 */
function userplane_perm() {
  return array('administer webchat');
}

/**
 * Menu Callback: Userplane Communication Suite XML.
 */
function userplane_csxml() {
	
	$output = "<?xml version='1.0' encoding='iso-8859-1'?>";
	$output .= "<!-- COPYRIGHT Userplane 2004 (http://www.userplane.com) -->";
	$output .= "<!-- CS version 1.8.7 -->";
	$output .= "<communicationsuite>";

	$output .= "<time>" . date("F d, Y h:i:s A") . "</time>";

$strDomainID = isset($_GET['domainID']) ? $_GET['domainID'] : null;
$strFunction = isset($_GET['function']) ? $_GET['function'] : (isset($_GET['action']) ? $_GET['action'] : null);

	if( $strFunction != null && $strDomainID != null )
	{
		$strSessionGUID = isset($_GET['sessionGUID']) ? $_GET['sessionGUID'] : null;
		$strKey = isset($_GET['key']) ? $_GET['key'] : null;
		$strUserID = isset($_GET['userID']) ? $_GET['userID'] : null;
		$strRoomName = isset($_GET['roomName']) ? $_GET['roomName'] : null;
		$strBlockedUserID = isset($_GET['blockedUserID']) ? $_GET['blockedUserID'] : null;
		$strFriendUserID = isset($_GET['friendUserID']) ? $_GET['friendUserID'] : null;
		$bConnected = isset($_GET['connected']) ? $_GET['connected'] : null;
		$bConnected = $bConnected == "true" || $bConnected == "1";
		$bAdmin = isset($_GET['admin']) ? $_GET['admin'] : null;
		$bAdmin = $bAdmin == "true" || $bAdmin == "1";
		$bExists = isset($_GET['exists']) ? $_GET['exists'] : null;
		$bExists = $bExists == "true" || $bExists == "1";
		$bInRoom = isset($_GET['inRoom']) ? $_GET['inRoom'] : null;
		$bInRoom = $bInRoom == "true" || $bInRoom == "1";
		$bBlocked = isset($_GET['blocked']) ? $_GET['blocked'] : null;
		$bBlocked = $bBlocked == "true" || $bBlocked == "1";
		$bBanned = isset($_GET['banned']) ? $_GET['banned'] : null;
		$bBanned = $bBanned == "true" || $bBanned == "1";
		$bFriend = isset($_GET['friend']) ? $_GET['friend'] : null;
		$bFriend = $bFriend == "true" || $bFriend == "1";
	}

		switch( $strFunction )
		{

			case "getDomainPreferences":
				$output .= "<domain>";
					$output .= "<avenabled>false</avenabled>";
					$output .= "<forbiddenwordslist>crap,shit</forbiddenwordslist>";
					$output .= "<allowCalls>setBannedStatus,setBlockedStatus,setFriendStatus</allowCalls>";
					$output .= "<smileys>";

					$list = _smileys_list();
  					foreach ($list as $smiley) 
					{
  							$acronyms = explode(" ", $smiley->acronyms);
							$output .= "<smiley>";
							$output .= "<name>" . $smiley->description . "</name>";
							$output .= "<image>" . url($smiley->image, NULL, NULL, 1) . "</image>";
							$output .= "<codes>";
							foreach ($acronyms as $a) {
								$output .= "<code><![CDATA[" . $a . "]]></code>";
							}

							$output .= "</codes>";
							$output .= "</smiley>";
					}

					$output .= "</smileys>";
					$output .= "<chat>";
						$output .= "<labels>";
							$output .= "<userdata initiallines=\"0\">";
								$output .= "<line>City</line>";
								$output .= "<line>Region</line>";
								$output .= "<line>Country</line>";
							$output .= "</userdata>";
							$output .= "<lobby><name>Waiting Room</name><description>Ourmedia's Lobby</description></lobby>";
						$output .= "</labels>";
						$output .= "<maxroomusers>20</maxroomusers>";
						$output .= "<maxdockitems>2</maxdockitems>";
						$output .= "<characterlimit>200</characterlimit>";
						$output .= "<userroomcreate>false</userroomcreate>";
						$output .= "<roomemptytimeout>600</roomemptytimeout>";
						$output .= "<maxhistorymessages>20</maxhistorymessages>";
						$output .= "<gui>";
							$output .= "<viewprofile>true</viewprofile>";
							$output .= "<instantcommunicator>true</instantcommunicator>";
							$output .= "<addfriend>true</addfriend>";
							$output .= "<block>false</block>";
							$output .= "<images>";
								$output .= "<watermark>http://images.clearplane.userplane.com/im/images/UserplaneLogo.jpg</watermark>";
							$output .= "</images>";
							$output .= "<initialinputlines>1</initialinputlines>";
						$output .= "</gui>";
						$output .= "<roomlist>";
							// Make as many as you want, these will always appear when the app reloads (even if deleted in the client)
							$output .= "<room><name>Singles</name><description>Singles Description</description></room>";
							$output .= "<room><name>Lazy People</name><description>Lazy People Description</description></room>";
							$output .= "<room><name>Athletic People</name><description>Athletic People Description</description></room>";
						$output .= "</roomlist>";
						$output .= "<getannouncementsinterval>-1</getannouncementsinterval>";
						$output .= "<sendarchive>false</sendarchive>";
					$output .= "</chat>";
				$output .= "</domain>";
				break;

			case "getUser":
				if( $strSessionGUID != null || $strUserID != null )
				{
					if( $strUserID == null || strlen(trim($strUserID)) == 0 )
					{
						$result = db_query("SELECT uid FROM {sessions} WHERE sid = '%s'", $strSessionGUID);
						if (db_num_rows($result)) 
						{
							$user = db_fetch_object($result);
							$output .= "<user>";
							$output .= "<userid>" . $user->uid . "</userid>";
							$output .= "</user>";
						} else {
							$output .= "<user>";
							$output .= "<userid>INVALID</userid>";
							$output .= "</user>";
						}

					}
					
					if( $strUserID != null || strlen(trim($strUserID)) > 0 )
					{
						
						$account = user_load(array('uid' => $strUserID));
						if ($account)
						{

						$output .= "<user>";
							$output .= "<userid>" . $strUserID . "</userid>";

							if (user_access('administer webchat',$account))
							{
								$output .= "<admin>true</admin>";
							} else {
								$output .= "<admin>false</admin>";
							}

							$output .= "<displayname>" . $account->name . "</displayname>";
							$output .= "<avsettings>";
								$output .= "<avenabled>true</avenabled>";
								$output .= "<audioSend>true</audioSend>";
								$output .= "<videoSend>true</videoSend>";
								$output .= "<audioReceive>true</audioReceive>";
								$output .= "<videoReceive>true</videoReceive>";
								$output .= "<audiokbps>16</audiokbps>"; 		// acceptable values: 10,16,22,44,88
								$output .= "<videokbps>100</videokbps>";		// recommended range: 10 - 200
								$output .= "<videofps>15</videofps>";			// acceptable range: 1 - 30
							$output .= "</avsettings>";
							$output .= "<buddylist>";

 							if ($buddies = buddylist_get_buddies($strUserID)) 
							{
    							foreach ($buddies as $buddy) 
								{
									$output .= "<userid>" . $buddy->uid . "</userid>";
    							}
							}

							$output .= "</buddylist>";
							$output .= "<blocklist>";
							$output .= "</blocklist>";
							$output .= "<images>";
								$output .= "<icon></icon>";
								$output .= "<thumbnail></thumbnail>";

								  if (variable_get('user_pictures', 0)) {
								    if ($account->picture && file_exists($account->picture)) {
								      $picture = file_create_url($account->picture);
								    }
								    else if (variable_get('user_picture_default', '')) {
								      $picture = variable_get('user_picture_default', '');
								    }
								}
								$output .= "<fullsize>$picture</fullsize>";
							$output .= "</images>";
							$output .= "<chat>";
								$output .= "<userdatavalues>";
									$output .= "<line>" . $account->profile_city . "</line>";
									$output .= "<line>" . $account->profile_region . "</line>";
									$output .= "<line>" . $account->profile_country . "</line>";
								$output .= "</userdatavalues>";
								$output .= "<gui>";
									$output .= "<viewprofile>true</viewprofile>";
									$output .= "<instantcommunicator>true</instantcommunicator>";
								$output .= "</gui>";
								$output .= "<notextentry>false</notextentry>";
								$output .= "<invisible>false</invisible>";
								$output .= "<userroomcreate>false</userroomcreate>";
								$output .= "<adminrooms>";
									$output .= "<room createOnLogin='true'><name>Joe's Room</name><description>A rooom just for Joe</description></room>";
									$output .= "<room createOnLogin='false'><name>Singles</name><description>Singles Description</description></room>";
									$output .= "<room createOnLogin='false'><name>18-24</name></room>";
								$output .= "</adminrooms>";
								$output .= "<restrictedRooms allowRestricted='false'>";
									$output .= "<room createOnLogin='true' creatorID='4377'><name>Only Site Admins</name><description>Only Site admins can get into this room</description></room>";
								$output .= "</restrictedRooms>";
								$output .= "<initialroom></initialroom>";
								$output .= "<maxdockitems>1</maxdockitems>";
							$output .= "</chat>";
						$output .= "</user>";
						} else {
						$output .= "<user>";
						$output .= "<userid>INVALID</userid>";
						$output .= "</user>";
						}
					}
				}
				break;


			case "setBannedStatus":
				if( $strUserID != null )
				{

					// bBanned is true or false whether userID has been banned by an admin
					if( $bBanned )
					{
						$account = user_load(array('uid' => $strUserID));
						if ($account)
						{
						    user_save($account, array('status' => 0));
						}
					}
					else
					{
						$account = user_load(array('uid' => $strUserID));
						if ($account)
						{
						    user_save($account, array('status' => 1));
						}
					}
					// Handle this event, no need to return anything else
				}
				break;
				
			case "setBlockedStatus":
				if( $strUserID != null && $strBlockedUserID != null )
				{
					// bBlocked is the true or false boolean that specifies whether they are blocked
					if( $bBlocked )
					{
					}
					else
					{
					}
					// Handle this event, no need to return anything else
				}
				break;
				
			case "setFriendStatus":
				if( $strUserID != null && $strFriendUserID != null )
				{
					// Handle this event, no need to return anything else

					// bFriend is a boolean true or false whether strUserID is adding or removing strFriendUserID from friend list
					if( $bFriend )
					{
						$account = user_load(array('uid' => $strUserID));
						if ($account)
						{
							if (!in_array($strFriendUserID, array_keys(buddylist_get_buddies($account->uid)))) 
							{
								db_query('INSERT INTO {buddylist} (received, uid, buddy, timestamp) VALUES (1, %d, %d, %d)' , $account->uid , $strFriendUserID , time());
							}
						}
					}
					else
					{
						$account = user_load(array('uid' => $strUserID));
						if ($account)
						{
							db_query('DELETE FROM {buddylist} WHERE uid = %d AND buddy = %d' , $account->uid , $strFriendUserID);
						}
					}
				}
				break;

			default:
				break;

		}

	$output .= "</communicationsuite>";

	header( "Content-Type: text/xml" );
	print $output;
}

/**
 * Implementation of hook_menu().
 */
function userplane_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array('path' => 'userplane/csxml', 'title' => t('Userplane Communication Suite XML'),
      'callback' => 'userplane_csxml',
      'access' => TRUE,
      'type' => MENU_CALLBACK);
  }

  return $items;
}

?>