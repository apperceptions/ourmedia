<?php
// $Id: syndication.module,v 1.32.2.5 2004/12/14 02:46:29 weitzman Exp $

/**
 * Implementation of hook_menu().
 */
function syndication_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array('path' => 'syndication', 'title' => t('syndication'),
    'access' => user_access('access content'),
    'callback' => 'syndication_page',
    'weight' => 6);
  }
  return $items;
}

function syndication_block($op = "list", $delta = 0) {
  if($op == "list") {
    $blocks[0]["info"] = "Syndicate (more)";
    return $blocks;
  }
  else {
    if (user_access("access content")) {
      $block["subject"] = t("Syndicate");
      $block["content"] = theme('xml_icon', url('node/feed'));
      $block["content"] .= '<div class="more-link">'. l(t("more"), "syndication", array ("title" => t("Review all XML feeds exported by %sn", array ("%sn" => variable_get("site_name", "Drupal"))))). "</div>\n";
      return $block;
    }
  }
}

function syndication_page () {
  $edit = $_POST["edit"];
  $blogs = syndication_blogs($edit);

  if (function_exists("blog_feed_user")) {
    $output .= theme("box", t("Syndicate: Blogs"), $blogs);
  }
  if (module_exist("aggregator")) {
    $output .= theme("box", t("Syndicate: Directory"), syndication_opml());
  }
  // modules may add their own syndication boxes
  $result = array();
  foreach (module_list() as $name) {
    $result = module_invoke($name, "syndication", $edit);
    if (isset($result)) {
      foreach ($result as $box) {
        $output .= theme("box", t("Syndicate: %s", array ("%s" => $box["subject"])), $box["content"]);
      }
    }
  }
  print theme("page", $output);
}

function syndication_blogs($edit) {

  if ($edit) {
    $i = 1;
    $result = db_query("SELECT uid, name FROM {users} WHERE name LIKE '%s' AND uid > 0 ORDER BY changed DESC", '%'. $edit["name"]. '%');
    if (db_num_rows($result)) {
      while ($account = db_fetch_object($result)) {
        $link[] = l(t("%s's RSS feed", array ("%s" => $account->name)), "blog/feed/$account->uid");
        $link[] = l(t("%s's blog", array ("%s" => $account->name)), "blog/$account->uid");
        $link[] = l(t("%s's profile", array ("%s" => $account->name)), "user/view/$account->uid");
      }
      $row[] = "$i. ". theme("links", $link);
      $i++;
    $output = form_item(t("Search Results"), implode($row, "<br />")). "<br />";
    }
    else {
      form_set_error('name', t("Username not found."));
    }
  }
  $all = l(t("all users"), "blog/feed");
  $output .= "<p>". t("At <i>%sn</i>, %all and each user, have an RSS feed for their blog.", array ("%sn" => variable_get("site_name", "Drupal"), "%all" => $all)). "</p>";
  $result = db_query_range("SELECT DISTINCT(u.uid), u.name FROM {users} u INNER JOIN {node} n ON u.uid = n.uid WHERE n.type = 'blog' AND n.status = 1", 0, 16);
  while ($account = db_fetch_object($result)) {
    $url = "blog/feed/$account->uid";
    $authors[] = l(t("%s's feed", array ("%s" => $account->name)), $url);
  }
  $output .= $authors ? form_item(t("Recent Blog Authors"), implode($authors, ", ")) : "";

  $output .= form_textfield("Search users", "name", $edit["name"], 25, 60, t("Enter a username to view her blog feed, and other details."));
  $output .= form_submit(t("Search"));
  $output = form($output);
  return $output;
}

function syndication_opml() {
  $url = l(t("this OPML file"), "aggregator/opml");
  $output = t("In addition to displaying RSS feeds, <i>%sn</i> offers %link which lists all RSS feeds that are collected here.", array ("%sn" => variable_get("site_name", "Drupal"), "%link" => $url));
  return $output;
}

function syndication_help($section) {
  $output ="";

  switch ($section) {
    case 'admin/help#syndication':
      $output = syndication_help_intro();
      $output .= syndication_help_api(); //TODO move this to Doxygen
      break;
    case 'admin/modules#description':
      $output .= t("Adds a Syndication block, links to more feeds");
      break;
    case 'admin/modules/syndication':
      $output = syndication_help_intro();
      break;
  }

  return $output;
}

function syndication_help_intro() {
  $output = "
<p>Syndication.module offers a web page which centralizes all of the RSS feeds
generated by Drupal. This helps users find interesting feeds from your web site.</p>

<p>Currently, the syndication page helps visitors find the following feeds.
<ul>
<li>the blog feed of any user or all users
<li>node feeds for any taxonomy terms, including composites of terms (requires <i>taxonomy_dhtml.module</i>)
<li>a directory of all feeds being consumed by the <i>import.module</i>
</ul>
</p>

<h3>For Module Developers - Syndication hook</h3>";
  return $output;
}

function syndication_help_api() {

  $output = '

    Any module can export boxes to the syndication page. You do so
    by creating a <i>modulename</i>_syndication function which returns
    an associative array of boxes, much like the block module. Each box
    in the array requires <i>subject</i> and <i>content</i> fields. Example:
    <pre>
    function mymodule_syndication() {

      // Creating the first box

      $box[0]["subject"] = "Existentialism";
      $box[0]["content"] = "So many feeds in this world";

      // Lets create a one box more

      $box[1]["subject"] = "Got any question?";
      $box[1]["content"] = "Who, Where, Why, When";
      return  $block;
    }
    </pre>';
  return $output;
}

?>
